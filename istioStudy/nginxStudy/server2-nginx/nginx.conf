
pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    log_format  main  '$remote_addr $remote_user [$time_local] "$request" $http_host '
        '$status $upstream_status $body_bytes_sent "$http_referer" '
        '"$http_user_agent‚Äù $ssl_protocol $ssl_cipher $upstream_addr '
        '$request_time $upstream_response_time';

    access_log  logs/access.log  main;

    server {
        listen 8091;
        default_type text/plain;
        limit_rate 1;
        return 200 '8091 server response.\n';
    }

    server {
        listen 8092 ssl;
        ssl_certificate /home/xiaodong/tools/server2-nginx/conf/httpbin.microservice.rocks/3_application/certs/httpbin.microservice.rocks.cert.pem;
        ssl_certificate_key /home/xiaodong/tools/server2-nginx/conf/httpbin.microservice.rocks/3_application/private/httpbin.microservice.rocks.key.pem;

        ssl_verify_client   optional;
        ssl_verify_depth    2;
        ssl_client_certificate  /home/xiaodong/tools/server2-nginx/conf/httpbin.microservice.rocks/2_intermediate/certs/ca-chain.cert.pem;

        location /test {
            default_type    text/plain;
            alias html/;
            #return 200 '
            #    uri: $uri
            #    method: $request_method
            #    request: $request
            #    http_name: $http_name
            #    curtime: $time_local
            #    ssl_client_escaped_cert: $ssl_client_escaped_cert
            #    ssl_client_cert: $ssl_client_cert
            #    ssl_client_raw_cert: $ssl_client_raw_cert
            #    ssl_cipher: $ssl_cipher
            #    ssl_ciphers: $ssl_ciphers
            #    ssl_client_fingerprint: $ssl_client_fingerprint
            #    ssl_server_name: $ssl_server_name
            #    ssl_session_id: $ssl_session_id
            #    ssl_session_reused: $ssl_session_reused
            #    \n';
        }
    }





}
